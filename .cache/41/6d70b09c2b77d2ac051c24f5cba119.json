{"id":"kDIB","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"./mix.mjs","loc":{"line":1,"column":20,"index":20},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix.mjs"},{"name":"./mix-color.mjs","loc":{"line":2,"column":25,"index":58},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-color.mjs"},{"name":"./pipe.mjs","loc":{"line":3,"column":21,"index":98},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\pipe.mjs"},{"name":"./errors.mjs","loc":{"line":4,"column":24,"index":136},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\errors.mjs"},{"name":"../value/types/color/index.mjs","loc":{"line":5,"column":22,"index":174},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\index.mjs"},{"name":"../value/types/complex/index.mjs","loc":{"line":6,"column":45,"index":253},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\mix-complex.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\complex\\index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mixObject = exports.mixComplex = exports.mixArray = void 0;\nvar _mix = require(\"./mix.mjs\");\nvar _mixColor = require(\"./mix-color.mjs\");\nvar _pipe = require(\"./pipe.mjs\");\nvar _errors = require(\"./errors.mjs\");\nvar _index = require(\"../value/types/color/index.mjs\");\nvar _index2 = require(\"../value/types/complex/index.mjs\");\nconst mixImmediate = (origin, target) => p => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n  if (typeof origin === \"number\") {\n    return v => (0, _mix.mix)(origin, target, v);\n  } else if (_index.color.test(origin)) {\n    return (0, _mixColor.mixColor)(origin, target);\n  } else {\n    return origin.startsWith(\"var(\") ? mixImmediate(origin, target) : mixComplex(origin, target);\n  }\n}\nconst mixArray = (from, to) => {\n  const output = [...from];\n  const numValues = output.length;\n  const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n  return v => {\n    for (let i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nexports.mixArray = mixArray;\nconst mixObject = (origin, target) => {\n  const output = {\n    ...origin,\n    ...target\n  };\n  const blendValue = {};\n  for (const key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n  return v => {\n    for (const key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n};\nexports.mixObject = mixObject;\nconst mixComplex = (origin, target) => {\n  const template = _index2.complex.createTransformer(target);\n  const originStats = (0, _index2.analyseComplexValue)(origin);\n  const targetStats = (0, _index2.analyseComplexValue)(target);\n  const canInterpolate = originStats.numVars === targetStats.numVars && originStats.numColors === targetStats.numColors && originStats.numNumbers >= targetStats.numNumbers;\n  if (canInterpolate) {\n    return (0, _pipe.pipe)(mixArray(originStats.values, targetStats.values), template);\n  } else {\n    (0, _errors.warning)(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n    return mixImmediate(origin, target);\n  }\n};\nexports.mixComplex = mixComplex;"},"sourceMaps":null,"error":null,"hash":"4df5250c8b5b58e406b1111e80f5bda5","cacheData":{"env":{}}}