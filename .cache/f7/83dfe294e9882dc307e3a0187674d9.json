{"id":"U7W4","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"react","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\use-props.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\react\\index.js"},{"name":"../../motion/utils/is-forced-motion-value.mjs","loc":{"line":2,"column":36,"index":69},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\use-props.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\is-forced-motion-value.mjs"},{"name":"../../value/utils/is-motion-value.mjs","loc":{"line":3,"column":30,"index":148},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\use-props.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\utils\\is-motion-value.mjs"},{"name":"./utils/build-styles.mjs","loc":{"line":4,"column":32,"index":221},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\use-props.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\utils\\build-styles.mjs"},{"name":"./utils/create-render-state.mjs","loc":{"line":5,"column":38,"index":287},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\use-props.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\html\\utils\\create-render-state.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyRawValuesOnly = copyRawValuesOnly;\nexports.useHTMLProps = useHTMLProps;\nvar _react = require(\"react\");\nvar _isForcedMotionValue = require(\"../../motion/utils/is-forced-motion-value.mjs\");\nvar _isMotionValue = require(\"../../value/utils/is-motion-value.mjs\");\nvar _buildStyles = require(\"./utils/build-styles.mjs\");\nvar _createRenderState = require(\"./utils/create-render-state.mjs\");\nfunction copyRawValuesOnly(target, source, props) {\n  for (const key in source) {\n    if (!(0, _isMotionValue.isMotionValue)(source[key]) && !(0, _isForcedMotionValue.isForcedMotionValue)(key, props)) {\n      target[key] = source[key];\n    }\n  }\n}\nfunction useInitialMotionValues({\n  transformTemplate\n}, visualState, isStatic) {\n  return (0, _react.useMemo)(() => {\n    const state = (0, _createRenderState.createHtmlRenderState)();\n    (0, _buildStyles.buildHTMLStyles)(state, visualState, {\n      enableHardwareAcceleration: !isStatic\n    }, transformTemplate);\n    return Object.assign({}, state.vars, state.style);\n  }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n  const styleProp = props.style || {};\n  const style = {};\n  /**\n   * Copy non-Motion Values straight into style\n   */\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n  return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n  // The `any` isn't ideal but it is the type of createElement props argument\n  const htmlProps = {};\n  const style = useStyle(props, visualState, isStatic);\n  if (props.drag && props.dragListener !== false) {\n    // Disable the ghost element when a user drags\n    htmlProps.draggable = false;\n    // Disable text selection\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\";\n    // Disable scrolling on the draggable direction\n    style.touchAction = props.drag === true ? \"none\" : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n  }\n  if (props.tabIndex === undefined && (props.onTap || props.onTapStart || props.whileTap)) {\n    htmlProps.tabIndex = 0;\n  }\n  htmlProps.style = style;\n  return htmlProps;\n}"},"sourceMaps":null,"error":null,"hash":"3d212f6ed7fcfc22f5453bd8cab878ea","cacheData":{"env":{}}}