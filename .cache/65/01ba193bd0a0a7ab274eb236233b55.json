{"id":"lgN8","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"../../../easing/utils/is-bezier-definition.mjs","loc":{"line":1,"column":35,"index":35},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\animators\\waapi\\easing.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\easing\\utils\\is-bezier-definition.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cubicBezierAsString = void 0;\nexports.isWaapiSupportedEasing = isWaapiSupportedEasing;\nexports.mapEasingToNativeEasing = mapEasingToNativeEasing;\nexports.supportedWaapiEasing = void 0;\nvar _isBezierDefinition = require(\"../../../easing/utils/is-bezier-definition.mjs\");\nfunction isWaapiSupportedEasing(easing) {\n  return Boolean(!easing || typeof easing === \"string\" && supportedWaapiEasing[easing] || (0, _isBezierDefinition.isBezierDefinition)(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nexports.cubicBezierAsString = cubicBezierAsString;\nconst supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\nexports.supportedWaapiEasing = supportedWaapiEasing;\nfunction mapEasingToNativeEasing(easing) {\n  if (!easing) return undefined;\n  return (0, _isBezierDefinition.isBezierDefinition)(easing) ? cubicBezierAsString(easing) : Array.isArray(easing) ? easing.map(mapEasingToNativeEasing) : supportedWaapiEasing[easing];\n}"},"sourceMaps":null,"error":null,"hash":"5db1e816751439446a506da2ce1fe6a8","cacheData":{"env":{}}}