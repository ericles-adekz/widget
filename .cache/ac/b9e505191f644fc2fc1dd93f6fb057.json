{"id":"e0hm","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"../../utils/errors.mjs","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\errors.mjs"},{"name":"../../utils/time-conversion.mjs","loc":{"line":2,"column":38,"index":88},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\time-conversion.mjs"},{"name":"../../utils/use-instant-transition-state.mjs","loc":{"line":3,"column":38,"index":161},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\use-instant-transition-state.mjs"},{"name":"../animators/waapi/create-accelerated-animation.mjs","loc":{"line":4,"column":43,"index":252},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\animators\\waapi\\create-accelerated-animation.mjs"},{"name":"../animators/instant.mjs","loc":{"line":5,"column":39,"index":346},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\animators\\instant.mjs"},{"name":"../utils/default-transitions.mjs","loc":{"line":6,"column":37,"index":411},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\utils\\default-transitions.mjs"},{"name":"../utils/is-animatable.mjs","loc":{"line":7,"column":29,"index":476},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\utils\\is-animatable.mjs"},{"name":"../utils/keyframes.mjs","loc":{"line":8,"column":29,"index":535},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\utils\\keyframes.mjs"},{"name":"../utils/transitions.mjs","loc":{"line":9,"column":56,"index":617},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\utils\\transitions.mjs"},{"name":"../animators/js/index.mjs","loc":{"line":10,"column":29,"index":674},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\interfaces\\motion-value.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\animators\\js\\index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animateMotionValue = void 0;\nvar _errors = require(\"../../utils/errors.mjs\");\nvar _timeConversion = require(\"../../utils/time-conversion.mjs\");\nvar _useInstantTransitionState = require(\"../../utils/use-instant-transition-state.mjs\");\nvar _createAcceleratedAnimation = require(\"../animators/waapi/create-accelerated-animation.mjs\");\nvar _instant = require(\"../animators/instant.mjs\");\nvar _defaultTransitions = require(\"../utils/default-transitions.mjs\");\nvar _isAnimatable = require(\"../utils/is-animatable.mjs\");\nvar _keyframes = require(\"../utils/keyframes.mjs\");\nvar _transitions = require(\"../utils/transitions.mjs\");\nvar _index = require(\"../animators/js/index.mjs\");\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n  return onComplete => {\n    const valueTransition = (0, _transitions.getValueTransition)(transition, valueName) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let {\n      elapsed = 0\n    } = transition;\n    elapsed = elapsed - (0, _timeConversion.secondsToMilliseconds)(delay);\n    const keyframes = (0, _keyframes.getKeyframes)(value, valueName, target, valueTransition);\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = (0, _isAnimatable.isAnimatable)(valueName, originKeyframe);\n    const isTargetAnimatable = (0, _isAnimatable.isAnimatable)(valueName, targetKeyframe);\n    (0, _errors.warning)(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    let options = {\n      keyframes,\n      velocity: value.getVelocity(),\n      ease: \"easeOut\",\n      ...valueTransition,\n      delay: -elapsed,\n      onUpdate: v => {\n        value.set(v);\n        valueTransition.onUpdate && valueTransition.onUpdate(v);\n      },\n      onComplete: () => {\n        onComplete();\n        valueTransition.onComplete && valueTransition.onComplete();\n      }\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!(0, _transitions.isTransitionDefined)(valueTransition)) {\n      options = {\n        ...options,\n        ...(0, _defaultTransitions.getDefaultTransition)(valueName, options)\n      };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n      options.duration = (0, _timeConversion.secondsToMilliseconds)(options.duration);\n    }\n    if (options.repeatDelay) {\n      options.repeatDelay = (0, _timeConversion.secondsToMilliseconds)(options.repeatDelay);\n    }\n    if (!isOriginAnimatable || !isTargetAnimatable || _useInstantTransitionState.instantAnimationState.current || valueTransition.type === false) {\n      /**\n       * If we can't animate this value, or the global instant animation flag is set,\n       * or this is simply defined as an instant transition, return an instant transition.\n       */\n      return (0, _instant.createInstantAnimation)(_useInstantTransitionState.instantAnimationState.current ? {\n        ...options,\n        delay: 0\n      } : options);\n    }\n    /**\n     * Animate via WAAPI if possible.\n     */\n    if (value.owner && value.owner.current instanceof HTMLElement && !value.owner.getProps().onUpdate) {\n      const acceleratedAnimation = (0, _createAcceleratedAnimation.createAcceleratedAnimation)(value, valueName, options);\n      if (acceleratedAnimation) return acceleratedAnimation;\n    }\n    /**\n     * If we didn't create an accelerated animation, create a JS animation\n     */\n    return (0, _index.animateValue)(options);\n  };\n};\nexports.animateMotionValue = animateMotionValue;"},"sourceMaps":null,"error":null,"hash":"8532a6cdcb8dcf15ecd57b5b2a9ff218","cacheData":{"env":{}}}