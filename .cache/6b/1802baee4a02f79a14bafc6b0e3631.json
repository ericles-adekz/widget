{"id":"lQP7","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"../../../utils/clamp.mjs","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\rgba.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\clamp.mjs"},{"name":"../numbers/index.mjs","loc":{"line":2,"column":30,"index":80},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\rgba.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\numbers\\index.mjs"},{"name":"../utils.mjs","loc":{"line":3,"column":25,"index":129},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\rgba.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\utils.mjs"},{"name":"./utils.mjs","loc":{"line":4,"column":42,"index":187},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\rgba.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\types\\color\\utils.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rgba = exports.rgbUnit = void 0;\nvar _clamp = require(\"../../../utils/clamp.mjs\");\nvar _index = require(\"../numbers/index.mjs\");\nvar _utils = require(\"../utils.mjs\");\nvar _utils2 = require(\"./utils.mjs\");\nconst clampRgbUnit = v => (0, _clamp.clamp)(0, 255, v);\nconst rgbUnit = {\n  ..._index.number,\n  transform: v => Math.round(clampRgbUnit(v))\n};\nexports.rgbUnit = rgbUnit;\nconst rgba = {\n  test: (0, _utils2.isColorString)(\"rgb\", \"red\"),\n  parse: (0, _utils2.splitColor)(\"red\", \"green\", \"blue\"),\n  transform: ({\n    red,\n    green,\n    blue,\n    alpha: alpha$1 = 1\n  }) => \"rgba(\" + rgbUnit.transform(red) + \", \" + rgbUnit.transform(green) + \", \" + rgbUnit.transform(blue) + \", \" + (0, _utils.sanitize)(_index.alpha.transform(alpha$1)) + \")\"\n};\nexports.rgba = rgba;"},"sourceMaps":null,"error":null,"hash":"b0f3537540f5018915f86ed1c74e9031","cacheData":{"env":{}}}