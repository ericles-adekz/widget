{"id":"iyMT","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"./use-motion-value.mjs","loc":{"line":1,"column":31,"index":31},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-combine-values.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-motion-value.mjs"},{"name":"../frameloop/index.mjs","loc":{"line":2,"column":35,"index":92},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-combine-values.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\frameloop\\index.mjs"},{"name":"../utils/use-isomorphic-effect.mjs","loc":{"line":3,"column":42,"index":160},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-combine-values.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\use-isomorphic-effect.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCombineMotionValues = useCombineMotionValues;\nvar _useMotionValue = require(\"./use-motion-value.mjs\");\nvar _index = require(\"../frameloop/index.mjs\");\nvar _useIsomorphicEffect = require(\"../utils/use-isomorphic-effect.mjs\");\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  const value = (0, _useMotionValue.useMotionValue)(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n  const updateValue = () => value.set(combineValues());\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n  (0, _useIsomorphicEffect.useIsomorphicLayoutEffect)(() => {\n    const scheduleUpdate = () => _index.frame.update(updateValue, false, true);\n    const subscriptions = values.map(v => v.on(\"change\", scheduleUpdate));\n    return () => {\n      subscriptions.forEach(unsubscribe => unsubscribe());\n      (0, _index.cancelFrame)(updateValue);\n    };\n  });\n  return value;\n}"},"sourceMaps":null,"error":null,"hash":"e6ab2b5e26fe6b934c7a5f6b8359b55d","cacheData":{"env":{}}}