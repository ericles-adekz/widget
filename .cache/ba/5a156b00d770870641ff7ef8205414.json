{"id":"b7cz","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"react","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\react\\index.js"},{"name":"../../animation/utils/is-animation-controls.mjs","loc":{"line":2,"column":36,"index":72},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\utils\\is-animation-controls.mjs"},{"name":"../../context/PresenceContext.mjs","loc":{"line":3,"column":32,"index":155},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\context\\PresenceContext.mjs"},{"name":"../../render/utils/resolve-variants.mjs","loc":{"line":4,"column":40,"index":232},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\utils\\resolve-variants.mjs"},{"name":"../../utils/use-constant.mjs","loc":{"line":5,"column":28,"index":303},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\use-constant.mjs"},{"name":"../../value/utils/resolve-motion-value.mjs","loc":{"line":6,"column":35,"index":370},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\utils\\resolve-motion-value.mjs"},{"name":"../../context/MotionContext/index.mjs","loc":{"line":7,"column":30,"index":446},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\context\\MotionContext\\index.mjs"},{"name":"../../render/utils/is-controlling-variants.mjs","loc":{"line":8,"column":53,"index":540},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\utils\\use-visual-state.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\render\\utils\\is-controlling-variants.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeUseVisualState = void 0;\nvar _react = require(\"react\");\nvar _isAnimationControls = require(\"../../animation/utils/is-animation-controls.mjs\");\nvar _PresenceContext = require(\"../../context/PresenceContext.mjs\");\nvar _resolveVariants = require(\"../../render/utils/resolve-variants.mjs\");\nvar _useConstant = require(\"../../utils/use-constant.mjs\");\nvar _resolveMotionValue = require(\"../../value/utils/resolve-motion-value.mjs\");\nvar _index = require(\"../../context/MotionContext/index.mjs\");\nvar _isControllingVariants = require(\"../../render/utils/is-controlling-variants.mjs\");\nfunction makeState({\n  scrapeMotionValuesFromProps,\n  createRenderState,\n  onMount\n}, props, context, presenceContext) {\n  const state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n  if (onMount) {\n    state.mount = instance => onMount(props, instance, state);\n  }\n  return state;\n}\nconst makeUseVisualState = config => (props, isStatic) => {\n  const context = (0, _react.useContext)(_index.MotionContext);\n  const presenceContext = (0, _react.useContext)(_PresenceContext.PresenceContext);\n  const make = () => makeState(config, props, context, presenceContext);\n  return isStatic ? make() : (0, _useConstant.useConstant)(make);\n};\nexports.makeUseVisualState = makeUseVisualState;\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  const values = {};\n  const motionValues = scrapeMotionValues(props, {});\n  for (const key in motionValues) {\n    values[key] = (0, _resolveMotionValue.resolveMotionValue)(motionValues[key]);\n  }\n  let {\n    initial,\n    animate\n  } = props;\n  const isControllingVariants$1 = (0, _isControllingVariants.isControllingVariants)(props);\n  const isVariantNode$1 = (0, _isControllingVariants.isVariantNode)(props);\n  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {\n    if (initial === undefined) initial = context.initial;\n    if (animate === undefined) animate = context.animate;\n  }\n  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;\n  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n  const variantToSet = isInitialAnimationBlocked ? animate : initial;\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !(0, _isAnimationControls.isAnimationControls)(variantToSet)) {\n    const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(definition => {\n      const resolved = (0, _resolveVariants.resolveVariantFromProps)(props, definition);\n      if (!resolved) return;\n      const {\n        transitionEnd,\n        transition,\n        ...target\n      } = resolved;\n      for (const key in target) {\n        let valueTarget = target[key];\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n      for (const key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n  return values;\n}"},"sourceMaps":null,"error":null,"hash":"f3c908f44bd3599f931fb476941480c3","cacheData":{"env":{}}}