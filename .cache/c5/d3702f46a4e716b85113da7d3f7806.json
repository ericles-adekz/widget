{"id":"nXoq","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"./PanSession.mjs","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\index.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\PanSession.mjs"},{"name":"../../events/add-pointer-event.mjs","loc":{"line":2,"column":32,"index":79},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\index.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\events\\add-pointer-event.mjs"},{"name":"../../motion/features/Feature.mjs","loc":{"line":3,"column":24,"index":141},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\index.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\motion\\features\\Feature.mjs"},{"name":"../../utils/noop.mjs","loc":{"line":4,"column":21,"index":199},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\index.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\noop.mjs"},{"name":"../../frameloop/index.mjs","loc":{"line":5,"column":22,"index":245},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\gestures\\pan\\index.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\frameloop\\index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanGesture = void 0;\nvar _PanSession = require(\"./PanSession.mjs\");\nvar _addPointerEvent = require(\"../../events/add-pointer-event.mjs\");\nvar _Feature = require(\"../../motion/features/Feature.mjs\");\nvar _noop = require(\"../../utils/noop.mjs\");\nvar _index = require(\"../../frameloop/index.mjs\");\nconst asyncHandler = handler => (event, info) => {\n  if (handler) {\n    _index.frame.update(() => handler(event, info));\n  }\n};\nclass PanGesture extends _Feature.Feature {\n  constructor() {\n    super(...arguments);\n    this.removePointerDownListener = _noop.noop;\n  }\n  onPointerDown(pointerDownEvent) {\n    this.session = new _PanSession.PanSession(pointerDownEvent, this.createPanHandlers(), {\n      transformPagePoint: this.node.getTransformPagePoint()\n    });\n  }\n  createPanHandlers() {\n    const {\n      onPanSessionStart,\n      onPanStart,\n      onPan,\n      onPanEnd\n    } = this.node.getProps();\n    return {\n      onSessionStart: asyncHandler(onPanSessionStart),\n      onStart: asyncHandler(onPanStart),\n      onMove: onPan,\n      onEnd: (event, info) => {\n        delete this.session;\n        if (onPanEnd) {\n          _index.frame.update(() => onPanEnd(event, info));\n        }\n      }\n    };\n  }\n  mount() {\n    this.removePointerDownListener = (0, _addPointerEvent.addPointerEvent)(this.node.current, \"pointerdown\", event => this.onPointerDown(event));\n  }\n  update() {\n    this.session && this.session.updateHandlers(this.createPanHandlers());\n  }\n  unmount() {\n    this.removePointerDownListener();\n    this.session && this.session.end();\n  }\n}\nexports.PanGesture = PanGesture;"},"sourceMaps":null,"error":null,"hash":"0b17cc9af0e47e201fc2ac1d113519fc","cacheData":{"env":{}}}