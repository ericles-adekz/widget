{"id":"SMBJ","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"react","loc":{"line":2,"column":31,"index":63},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\components\\AnimatePresence\\PresenceChild.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\react\\index.js"},{"name":"../../context/PresenceContext.mjs","loc":{"line":3,"column":32,"index":104},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\components\\AnimatePresence\\PresenceChild.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\context\\PresenceContext.mjs"},{"name":"../../utils/use-constant.mjs","loc":{"line":4,"column":28,"index":169},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\components\\AnimatePresence\\PresenceChild.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\use-constant.mjs"},{"name":"./PopChild.mjs","loc":{"line":5,"column":25,"index":226},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\components\\AnimatePresence\\PresenceChild.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\components\\AnimatePresence\\PopChild.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PresenceChild = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _PresenceContext = require(\"../../context/PresenceContext.mjs\");\nvar _useConstant = require(\"../../utils/use-constant.mjs\");\nvar _PopChild = require(\"./PopChild.mjs\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst PresenceChild = ({\n  children,\n  initial,\n  isPresent,\n  onExitComplete,\n  custom,\n  presenceAffectsLayout,\n  mode\n}) => {\n  const presenceChildren = (0, _useConstant.useConstant)(newChildrenMap);\n  const id = (0, React.useId)();\n  const context = (0, React.useMemo)(() => ({\n    id,\n    initial,\n    isPresent,\n    custom,\n    onExitComplete: childId => {\n      presenceChildren.set(childId, true);\n      for (const isComplete of presenceChildren.values()) {\n        if (!isComplete) return; // can stop searching when any is incomplete\n      }\n\n      onExitComplete && onExitComplete();\n    },\n    register: childId => {\n      presenceChildren.set(childId, false);\n      return () => presenceChildren.delete(childId);\n    }\n  }),\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  (0, React.useMemo)(() => {\n    presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n  React.useEffect(() => {\n    !isPresent && !presenceChildren.size && onExitComplete && onExitComplete();\n  }, [isPresent]);\n  if (mode === \"popLayout\") {\n    children = React.createElement(_PopChild.PopChild, {\n      isPresent: isPresent\n    }, children);\n  }\n  return React.createElement(_PresenceContext.PresenceContext.Provider, {\n    value: context\n  }, children);\n};\nexports.PresenceChild = PresenceChild;\nfunction newChildrenMap() {\n  return new Map();\n}"},"sourceMaps":null,"error":null,"hash":"985ada6056e68e73346835a8842499d9","cacheData":{"env":{}}}