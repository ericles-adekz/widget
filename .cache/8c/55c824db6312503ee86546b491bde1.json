{"id":"RMqA","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"../../easing/ease.mjs","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\easing\\ease.mjs"},{"name":"../../easing/utils/is-easing-array.mjs","loc":{"line":2,"column":30,"index":81},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\easing\\utils\\is-easing-array.mjs"},{"name":"../../easing/utils/map.mjs","loc":{"line":3,"column":43,"index":166},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\easing\\utils\\map.mjs"},{"name":"../../utils/interpolate.mjs","loc":{"line":4,"column":28,"index":224},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\interpolate.mjs"},{"name":"../../utils/offsets/default.mjs","loc":{"line":5,"column":30,"index":285},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\offsets\\default.mjs"},{"name":"../../utils/offsets/time.mjs","loc":{"line":6,"column":37,"index":357},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\animation\\generators\\keyframes.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\offsets\\time.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultEasing = defaultEasing;\nexports.keyframes = keyframes;\nvar _ease = require(\"../../easing/ease.mjs\");\nvar _isEasingArray = require(\"../../easing/utils/is-easing-array.mjs\");\nvar _map = require(\"../../easing/utils/map.mjs\");\nvar _interpolate = require(\"../../utils/interpolate.mjs\");\nvar _default = require(\"../../utils/offsets/default.mjs\");\nvar _time = require(\"../../utils/offsets/time.mjs\");\nfunction defaultEasing(values, easing) {\n  return values.map(() => easing || _ease.easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({\n  duration = 300,\n  keyframes: keyframeValues,\n  times,\n  ease = \"easeInOut\"\n}) {\n  /**\n   * Easing functions can be externally defined as strings. Here we convert them\n   * into actual functions.\n   */\n  const easingFunctions = (0, _isEasingArray.isEasingArray)(ease) ? ease.map(_map.easingDefinitionToFunction) : (0, _map.easingDefinitionToFunction)(ease);\n  /**\n   * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n   * to reduce GC during animation.\n   */\n  const state = {\n    done: false,\n    value: keyframeValues[0]\n  };\n  /**\n   * Create a times array based on the provided 0-1 offsets\n   */\n  const absoluteTimes = (0, _time.convertOffsetToTimes)(\n  // Only use the provided offsets if they're the correct length\n  // TODO Maybe we should warn here if there's a length mismatch\n  times && times.length === keyframeValues.length ? times : (0, _default.defaultOffset)(keyframeValues), duration);\n  const mapTimeToKeyframe = (0, _interpolate.interpolate)(absoluteTimes, keyframeValues, {\n    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)\n  });\n  return {\n    calculatedDuration: duration,\n    next: t => {\n      state.value = mapTimeToKeyframe(t);\n      state.done = t >= duration;\n      return state;\n    }\n  };\n}"},"sourceMaps":null,"error":null,"hash":"775e6b0e2b8f3f6cf53436d032c15513","cacheData":{"env":{}}}