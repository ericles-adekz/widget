{"id":"uy6A","dependencies":[{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\package.json","includedInParent":true,"mtime":1688673350195},{"name":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1688672641386},{"name":"../utils/transform.mjs","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-transform.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\transform.mjs"},{"name":"./use-combine-values.mjs","loc":{"line":2,"column":39,"index":91},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-transform.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-combine-values.mjs"},{"name":"../utils/use-constant.mjs","loc":{"line":3,"column":28,"index":147},"parent":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\value\\use-transform.mjs","resolved":"C:\\Projetos\\adekz\\corporatefront_widget\\node_modules\\framer-motion\\dist\\es\\utils\\use-constant.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTransform = useTransform;\nvar _transform = require(\"../utils/transform.mjs\");\nvar _useCombineValues = require(\"./use-combine-values.mjs\");\nvar _useConstant = require(\"../utils/use-constant.mjs\");\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  const transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : (0, _transform.transform)(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n  const latest = (0, _useConstant.useConstant)(() => []);\n  return (0, _useCombineValues.useCombineMotionValues)(values, () => {\n    latest.length = 0;\n    const numValues = values.length;\n    for (let i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n    return transformer(latest);\n  });\n}"},"sourceMaps":null,"error":null,"hash":"72891f0bf467fca97cc47f972da41c36","cacheData":{"env":{}}}